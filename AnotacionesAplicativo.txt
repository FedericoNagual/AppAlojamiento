Grupo Nº1

-Baroni Rodrigo, Mauro Javier
-Fernandez, Federico Nicolás
-Garcia, Silvina Alejandra

Ausentes ultima parte
-Iroz, Nahuel Lucas Omar

////////////////////////////
Stack 

-Java (Spring boot)
-HTML, CSS, Prime Faces
-JSF
-JPF
-JPA
-Maven, MVC
-PostgreSQL

////////////////////////////
Caso A

-Gestión y Reserva de Alojamiento

Back Office

-GAL- Gestión de Alojamientos

Front Office

-RE- Registración de Usuarios
-BU- Búsqueda -> Solo alojamientos
-GR- Gestión de Reservas -> Simular el Pago por al menos 2 medios de pago.
-GRE- Gestionar Reservas- Listar Reservas

Reportes

1- Reportes Corte de control

	Se solicita crear un reporte donde se muestre un listado de reservas de Alojamientos ordenado de forma ascendente por la fecha de creaciñon. Debe contar con un filtro de fecha de creación que se encuentre en un determinado rango (Desde-Hasta)
	
	Encabezado:
	Se debe mostrar el rango de fechas por el que se está filtrando y el total de reservas del listado.
	
	Cuerpo: 
	Se debe mostrar en un listado donde se observe de todas las reservas del periodo, Fecha de inicio, Fecha de finalización, Nombre del Alojamiento y costo.
	
2- Reporte c/Corte de control

	Se solicita crear un reporte donde se muestre un listado de reservas de Alojamientos agrupados por cliente.
	
	Encabezado de Grupo:
	Se debe mostrar los datos del cliente que realiza la reserva.
	
	Cuerpo:
	Se desea mostrar en un listado donde se observe de todas las reservas del cliente: Fecha de creación de reserva, Fecha de inicio. Fechas de finalización, Nombre del alojamiento y costo.
	
////////////////////////////

Pendientes del Aplicativo

--	Armar el TPO de DS
--	Conectar a la base de datos el TPO de DS
--	Realizar un ABML con la base de datos
--	Armar el front end básico para el proyecto	

SubTareas para llegar a los objetivos principales


////////////////////////////
Datos:

Nombre de la base de datos:		Alojamientos

Nombre de la App:				MiAlojamiento


////////////////////////////
Pasos para armar una grilla

	-Armar un metodo que traiga todos los datos desde el back y de la BD Armarlo en una lista
	-En una clase Bean pasamos la lista por inyeccion de dependencias a una list de ese tipo.
	-En la misma clase usamos un atributo para 1 elemento seleccionado
	-Un metodo @PostConstruct con public void para rellenar la lista() y con un llamado a ese servicio para llenar la lista.
	-Armar y coenctar el xhtml con el bean

////////////////////////////

Mach Datos Java vs Datos PostgreSQL
J = java
P = PostgreSQL

id

	J:	Long

	P:	bigint


fecha

	J:	Date	(java.util.Date)	@Temporal(TemporalType.DATE)
	
	P:	timestamp with time zone

dni

	J:	Integer	(Importante usar objetos de los primitivos y no los primitivos como int, para poder juntar los objetos con el JPA)
	
	P:	bigInt
	
precio

	J: 	Double
	
	P:	Money
	
Relacion 1 a muchos 

ClaseA = uno
ClaseB = muchos



Relacion 1 a 1

Relacion Muchos a Muchos


